package net.zdsoft.eis.base.converter.asynchronous;import java.util.concurrent.Callable;import java.util.concurrent.ExecutorCompletionService;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.concurrent.Future;/** * 异步任务总控制器 * @author shenl * */public class AsynchronousService {	private static ExecutorCompletionService<Callable> ecs = null;	private static ExecutorService pool = null;	static{		pool = Executors.newFixedThreadPool(10);  		ecs = new ExecutorCompletionService<Callable>(pool);	}	/**	 * 提交一个异步任务	 * @param thread	 * @return	 */	public static Future submit(EisCallable thread){		return ecs.submit(thread);	}		public static Object take() throws InterruptedException{		return ecs.take();	}		public static void shutdown(){		pool.shutdown();	}}