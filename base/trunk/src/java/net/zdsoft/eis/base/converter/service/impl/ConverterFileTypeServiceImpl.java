package net.zdsoft.eis.base.converter.service.impl;import java.util.HashSet;import java.util.Set;import net.zdsoft.eis.base.common.service.SystemIniService;import net.zdsoft.eis.base.converter.service.ConverterFileTypeService;import org.apache.commons.lang.StringUtils;/** * 资源转换文件类型工具 *  * @author shenl *  */public class ConverterFileTypeServiceImpl implements ConverterFileTypeService {	private static final String TYPE_DOCUMENT = "SYSTEM.CONVERTOR.TYPE.DOCUMENT";	private static final String TYPE_VIDEO = "SYSTEM.CONVERTOR.TYPE.VIDEO";	private static final String TYPE_PICTURE="SYSTEM.NOT.CONVERTOR.TYPE.PICTURE";	private static final String TYPE_AUDIO="SYSTEM.NOT.CONVERTOR.TYPE.AUDIO";	private SystemIniService systemIniService;			public void setSystemIniService(SystemIniService systemIniService) {		this.systemIniService = systemIniService;	}	/**	 * 是否为文档文件	 * 	 * @param contentType	 * @return	 */	@Override	public boolean isDocument(String contentType) {		String documentTypes = systemIniService.getValue(TYPE_DOCUMENT);		Set<String> types = buildTypes(documentTypes);		if (types.contains(contentType)) {			return true;		} else {			return false;		}	}	/**	 * 是否为视频文件	 * 	 * @param contentType	 * @return	 */	@Override	public boolean isVideo(String contentType) {		String videoTypes = systemIniService.getValue(TYPE_VIDEO);		Set<String> types = buildTypes(videoTypes);		if (types.contains(contentType)) {			return true;		} else {			return false;		}	}	/**	 * 是否为图片文件	 * @param contentType	 * @return	 */	public boolean isPicture(String contentType) {		String documentTypes = systemIniService.getValue(TYPE_PICTURE);		Set<String> types = buildTypes(documentTypes);		if (types.contains(contentType)) {			return true;		} else {			return false;		}	}	/**	 * 判断是否音频文件	 * @param contentType	 * @return	 */	public boolean isAudio(String contentType) {		String documentTypes = systemIniService.getValue(TYPE_AUDIO);		Set<String> types = buildTypes(documentTypes);		if (types.contains(contentType)) {			return true;		} else {			return false;		}	}	/**	 * 构建类型	 * 	 * @return	 */	private Set<String> buildTypes(String typeStr) {		Set<String> types = new HashSet<String>();		String[] typeArr = typeStr.split(",");		for (String type : typeArr) {			if (StringUtils.isNotBlank(type)) {				types.add(type.trim());			}		}		return types;	}	/**	 * 获取部分扩展名(文档和视频)	 * 	 * @return	 */	@Override	public String[] getExtNames() {		Set<String> types = new HashSet<String>();		// 文档		String documentTypes = systemIniService.getValue(TYPE_DOCUMENT);		types.addAll(buildTypes(documentTypes));		// 视频		String videoTypes = systemIniService.getValue(TYPE_VIDEO);		types.addAll(buildTypes(videoTypes));		return types.toArray(new String[0]);	}	/**	 * 获取所有扩展名	 * 	 * @return	 */	@Override	public String[] getAllExtNames() {		Set<String> types = new HashSet<String>();		// 文档		String documentTypes = systemIniService.getValue(TYPE_DOCUMENT);		types.addAll(buildTypes(documentTypes));		// 视频		String videoTypes = systemIniService.getValue(TYPE_VIDEO);		types.addAll(buildTypes(videoTypes));				String pictureTypes = systemIniService.getValue(TYPE_PICTURE);		types.addAll(buildTypes(pictureTypes));				String audioTypes = systemIniService.getValue(TYPE_AUDIO);		types.addAll(buildTypes(audioTypes));		return types.toArray(new String[0]);	}		/**	 * 组装成文件路径	 * 	 * @param resourcePath	 * @param contentType	 * @return	 */	@Override	public String buildFilePath(String resourcePath, String contentType) {		if (StringUtils.isNotBlank(resourcePath)) {			int index = resourcePath.lastIndexOf(".");			if (isDocument(contentType)) {				return resourcePath.substring(0, index) + ".swf";			} else {				return resourcePath.substring(0, index) + ".flv";			}		}		return resourcePath;	}	@Override	public String[] getConTypeExtNames(int type) {		String documentTypes="";		if(1==type){			documentTypes = systemIniService.getValue(TYPE_DOCUMENT);		}else if(2==type){			documentTypes = systemIniService.getValue(TYPE_VIDEO);		}else if(3==type){			documentTypes = systemIniService.getValue(TYPE_PICTURE);		}else if(4==type){			documentTypes = systemIniService.getValue(TYPE_AUDIO);		}		if(StringUtils.isNotBlank(documentTypes)){			return documentTypes.split(",");		}		return new String[0];	}}