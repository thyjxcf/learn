package net.zdsoft.eis.base.converter.util;import java.io.FileOutputStream;import org.apache.commons.lang.StringUtils;import com.itextpdf.text.Image;import com.itextpdf.text.Rectangle;import com.itextpdf.text.pdf.PdfContentByte;import com.itextpdf.text.pdf.PdfReader;import com.itextpdf.text.pdf.PdfStamper;import com.itextpdf.text.pdf.PdfWriter;/** * PDF文件添加水印功能 *  * @date 2013-1-30 下午1:09:53 * @description */public class PdfAddMarkUtil {	public static void main(String[] args) throws Exception {//		addPdfMark("C://tem/1.pdf", "C://tem/2.pdf", "C://tem/水印.png", "C://tem/水印.png");		setReadOnly("C://tem/2.pdf", "C://tem/2.pdf");	}	/**	 * 给pdf文件添加水印	 * 	 * @param inPdfFile	 *            要加水印的原pdf文件路径	 * @param outPdfFile	 *            加了水印后要输出的路径	 * @param markImagePath	 *            水印图片路径	 * @throws Exception 	 * @throws Exception	 */	public static void addPdfMark(String inPdfFile, String outPdfFile, String markImagePathTop, String markImagePathEnd) throws Exception {		PdfReader reader = null;		PdfStamper stamp = null;		try {			reader = new PdfReader(inPdfFile, "PDF".getBytes());			stamp = new PdfStamper(reader, new FileOutputStream(outPdfFile));			Image imgTop = null;			if (StringUtils.isNotBlank(markImagePathTop)) {				imgTop = Image.getInstance(markImagePathTop);// 插入水印			}						Image imgEnd = null;			if (StringUtils.isNotBlank(markImagePathEnd)) {				imgEnd = Image.getInstance(markImagePathEnd);// 插入水印				imgEnd.setAbsolutePosition(0, 0);			}			for (int i = 1; i <= reader.getNumberOfPages(); i++) {				PdfContentByte under = stamp.getOverContent(i);				if (imgTop != null) {					//页眉水印					Rectangle rectangle = reader.getPageSize(i);					float f = rectangle.getHeight() - imgTop.getHeight();										imgTop.setAbsolutePosition(0, f);					under.addImage(imgTop);				}				if (imgEnd != null) {					//页脚水印					under.addImage(imgEnd);				}			}		} finally{			if (stamp != null) {				stamp.close();// 关闭			}			if (reader != null) {				reader.close();			}		}	}	/**	 * 加密文档	 * @param inPdfFile	 * @param outPdfFile	 * @throws Exception	 */	public static void setReadOnly(String inPdfFile, String outPdfFile) throws Exception{		PdfReader reader = null;		PdfStamper stamp = null;		try {			reader = new PdfReader(inPdfFile, "PDF".getBytes());			stamp = new PdfStamper(reader, new FileOutputStream(outPdfFile));			stamp.setEncryption(null, null, PdfWriter.ALLOW_PRINTING, PdfWriter.STANDARD_ENCRYPTION_128);		} finally{			if (stamp != null) {				stamp.close();// 关闭			}			if (reader != null) {				reader.close();			}		}	}	}