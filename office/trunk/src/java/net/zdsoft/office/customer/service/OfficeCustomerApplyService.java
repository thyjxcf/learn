package net.zdsoft.office.customer.service;import java.util.*;import net.zdsoft.office.customer.entity.OfficeCustomerApply;import net.zdsoft.office.customer.entity.SearchCustomer;import net.zdsoft.eis.base.auditflow.manager.entity.FlowAudit;import net.zdsoft.eis.base.common.entity.Dept;import net.zdsoft.eis.base.common.entity.User;import net.zdsoft.keel.util.Pagination;/** * office_customer_apply  * @author  *  */public interface OfficeCustomerApplyService {	public Integer deleteAll(OfficeCustomerApply officeCustomerApply,String applyId);	/**	 * 提交审核	 * @param audit	 * @param customer	 * @param auditId	 * @param roleCode TODO	 */	public void saveContestStususclaAudit(FlowAudit audit, OfficeCustomerApply customer, String auditId, String roleCode);		/**	 * 判断是否是顶级部门负责人	 * @param unitId	 * @param teacherId	 * @return	 */	public boolean isDeptLeader(String unitId, String teacherId);		/**	 * 获取各用户对应的顶级部门名称  key--deptId，value--部门名称	 * @param unitId	 * @param userIds	 * @return	 */	public Map<String, String> getTopDeptNameMap(String unitId, String[] userIds);		/**	 * 获取跟进人list	 * @param unitId	 * @param userId	 * @return	 */	public List<User> getFollowUserList(String unitId, String userId);		/**	 * 获取可以抄送的人员list	 * @param unitId	 * @param userId	 * @return	 */	public List<User> getCpopyUserList(String unitId, String userId);		public List<OfficeCustomerApply> getAllList(SearchCustomer searchCustomer,String unitId,String userId,boolean cilent,boolean deptLeader,boolean regionLeader, Pagination page);		public List<OfficeCustomerApply> getMyCustomerByUnitIdPage(String unitId,			String userId,SearchCustomer searchCustomer,Pagination page);	/**	 * 新增office_customer_apply	 * @param officeCustomerApply	 * @return	 */	public OfficeCustomerApply save(OfficeCustomerApply officeCustomerApply);	public OfficeCustomerApply putOffApply(OfficeCustomerApply officeCustomerApply);		public OfficeCustomerApply addCustomer(OfficeCustomerApply officeCustomerApply);		/**	 * 根据ids数组删除office_customer_apply数据	 * @param ids	 * @return	 */	public Integer delete(String[] ids);		public Integer deletePutOffCustomer(String unitId);	/**	 * 更新office_customer_apply	 * @param officeCustomerApply	 * @return	 */	public Integer update(OfficeCustomerApply officeCustomerApply);	public Integer updateFollowerId(OfficeCustomerApply officeCustomerApply);		public Integer updateIsDelete(boolean flag,String id);	/**	 * 根据id获取office_customer_apply	 * @param id	 * @return	 */	public OfficeCustomerApply getOfficeCustomerApplyById(String id);		/**	 * 根据ids数组查询office_customer_applymap	 * @param ids	 * @return	 */	public Map<String, OfficeCustomerApply> getOfficeCustomerApplyMapByIds(String[] ids);		/**	 * 获取office_customer_apply列表	 * @return	 */	public List<OfficeCustomerApply> getOfficeCustomerApplyList();		/**	 * 分页获取office_customer_apply列表	 * @param page	 * @return	 */	public List<OfficeCustomerApply> getOfficeCustomerApplyPage(Pagination page);	

	/**
	 * 根据UnitId获取office_customer_apply列表
	 * @param unitId
	 * @return
	 */
	public List<OfficeCustomerApply> getOfficeCustomerApplyByUnitIdList(String unitId);		/**	 * 获取审核list	 * @param ent	 * @param userId TODO	 * @param queryStatus	 * @param roleCode	 * @param customer TODO	 * @param applyTypes TODO	 * @param page	 * @return	 */	public List<OfficeCustomerApply> getCustomerApplyAuditList(OfficeCustomerApply ent, 			String userId, String queryStatus, String roleCode, SearchCustomer customer, String[] applyTypes, Pagination page);

	/**
	 * 根据UnitId分页获取office_customer_apply
	 * @param unitId
	 * @param page
	 * @return
	 */
	public List<OfficeCustomerApply> getOfficeCustomerApplyByUnitIdPage(String unitId,String userId,SearchCustomer searchCustomer, Pagination page);		public Map<String, String> getDeptNameMap(Map<String, String> map,			Map<String, Dept> deptMap,String userId,String deptId);}