package net.zdsoft.office.dataAnalysis.service.impl;import java.io.File;import java.io.IOException;import java.util.*;import org.apache.commons.io.FileUtils;import net.zdsoft.office.dataAnalysis.entity.OfficeDataReportAnalysis;import net.zdsoft.office.dataAnalysis.service.OfficeDataReportAnalysisService;import net.zdsoft.office.dataAnalysis.dao.OfficeDataReportAnalysisDao;import net.zdsoft.eis.base.storage.StorageFileService;import net.zdsoft.keel.util.DateUtils;import net.zdsoft.keel.util.Pagination;import net.zdsoft.keelcnet.action.UploadFile;/** * office_data_report_analysis  * @author  *  */public class OfficeDataReportAnalysisServiceImpl implements OfficeDataReportAnalysisService{	private OfficeDataReportAnalysisDao officeDataReportAnalysisDao;	private StorageFileService storageFileService;		/**	 * 新增office_data_report_analysis	 * @param officeDataReportAnalysis	 * @return	 */	@Override	public OfficeDataReportAnalysis save(OfficeDataReportAnalysis officeDataReportAnalysis){		return officeDataReportAnalysisDao.save(officeDataReportAnalysis);	}	@Override	public OfficeDataReportAnalysis save(			OfficeDataReportAnalysis officeDataReportAnalysis, UploadFile file) {		// TODO Auto-generated method stub					OfficeDataReportAnalysis data = getOfficeDataReportAnalysis(officeDataReportAnalysis);			if(data != null ){				delete(data);			}			officeDataReportAnalysis.setObjectUnitId(officeDataReportAnalysis.getUnitId());			officeDataReportAnalysis.setFilename(file.getFileName());			String fileExt = net.zdsoft.keel.util.FileUtils.getExtension(file.getFileName());			officeDataReportAnalysis.setExtName(fileExt);			officeDataReportAnalysis.setFilesize((int)file.getFileSize());			Date creationTime = new Date();			officeDataReportAnalysis.setCreationTime(new Date());			String year = DateUtils.date2String(creationTime, "yyyy");			officeDataReportAnalysis.setCustomFilePath(OfficeDataReportAnalysis.OBJECT_TYPE+File.separator+year+File.separator+officeDataReportAnalysis.getUnitId());			storageFileService.saveFile(officeDataReportAnalysis, file, true);			officeDataReportAnalysisDao.save(officeDataReportAnalysis);		return officeDataReportAnalysis;	}	@Override	public OfficeDataReportAnalysis getOfficeDataReportAnalysisByUnitId(			String unitId) {		// TODO Auto-generated method stub		return officeDataReportAnalysisDao.getOfficeDataReportAnalysisByUnitId(unitId);	}	@Override	public Integer delete(OfficeDataReportAnalysis officeDataReportAnalysis) {		// TODO Auto-generated method stub		storageFileService.setDirPath(officeDataReportAnalysis);		try {			File file = officeDataReportAnalysis.getFile();			//取消删除文件 只删除数据库记录//			FileUtils.forceDelete(file);		} catch (IOException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}		officeDataReportAnalysisDao.delete(new String[]{officeDataReportAnalysis.getId()});		return null;	}	/**	 * 根据ids数组删除office_data_report_analysis数据	 * @param ids	 * @return	 */	@Override	public Integer delete(String[] ids){		return officeDataReportAnalysisDao.delete(ids);	}		/**	 * 更新office_data_report_analysis	 * @param officeDataReportAnalysis	 * @return	 */	@Override	public Integer update(OfficeDataReportAnalysis officeDataReportAnalysis){		return officeDataReportAnalysisDao.update(officeDataReportAnalysis);	}		/**	 * 根据id获取office_data_report_analysis	 * @param id	 * @return	 */	@Override	public OfficeDataReportAnalysis getOfficeDataReportAnalysisById(String id){		return officeDataReportAnalysisDao.getOfficeDataReportAnalysisById(id);	}		/**	 * 根据ids数组查询office_data_report_analysismap	 * @param ids	 * @return	 */	@Override	public Map<String, OfficeDataReportAnalysis> getOfficeDataReportAnalysisMapByIds(String[] ids){		return officeDataReportAnalysisDao.getOfficeDataReportAnalysisMapByIds(ids);	}		/**	 * 获取office_data_report_analysis列表	 * @return	 */	@Override	public List<OfficeDataReportAnalysis> getOfficeDataReportAnalysisList(){		return officeDataReportAnalysisDao.getOfficeDataReportAnalysisList();	}		/**	 * 分页获取office_data_report_analysis列表	 * @param page	 * @return	 */	@Override	public List<OfficeDataReportAnalysis> getOfficeDataReportAnalysisPage(Pagination page){		return officeDataReportAnalysisDao.getOfficeDataReportAnalysisPage(page);	}		@Override	public List<OfficeDataReportAnalysis> getOfficeDataReportAnalysisByUnitIdList(String unitId){		return officeDataReportAnalysisDao.getOfficeDataReportAnalysisByUnitIdList(unitId);	}	@Override	public List<OfficeDataReportAnalysis> getOfficeDataReportAnalysisByUnitIdPage(String unitId, Pagination page){		return officeDataReportAnalysisDao.getOfficeDataReportAnalysisByUnitIdPage(unitId, page);	}	@Override	public OfficeDataReportAnalysis getOfficeDataReportAnalysis(OfficeDataReportAnalysis analysis) {		return officeDataReportAnalysisDao.getOfficeDataReportAnalysis(analysis);	}	@Override	public List<OfficeDataReportAnalysis> getOfficeDataReportAnalysisList(String[] unitIds, String year , String timeFrame) {		return officeDataReportAnalysisDao.getOfficeDataReportAnalysisList(unitIds, year , timeFrame);	}	@Override	public List<OfficeDataReportAnalysis> getOfficeDataReportAnalysisByYearTimeFrame(String year, String timeFrame) {		return officeDataReportAnalysisDao.getOfficeDataReportAnalysisByYearTimeFrame(year,timeFrame);	}	public void setOfficeDataReportAnalysisDao(OfficeDataReportAnalysisDao officeDataReportAnalysisDao){		this.officeDataReportAnalysisDao = officeDataReportAnalysisDao;	}	public void setStorageFileService(StorageFileService storageFileService) {		this.storageFileService = storageFileService;	}		}